name: SSH-Linux

on:
  workflow_dispatch:

jobs:
  secure-ssh:
    runs-on: ubuntu-latest
    timeout-minutes: 3600

    steps:
      - name: Setup SSH Service
        run: |
          sudo apt-get update
          sudo apt-get install -y openssh-server
          sudo systemctl enable ssh
          sudo systemctl start ssh

          # Configure SSH for password authentication
          sudo sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config
          sudo sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
          sudo systemctl restart ssh

      - name: Create SSH User with Secure Password
        run: |
          # Generate secure random password
          PASSWORD=$(openssl rand -base64 32 | tr -d "=+/" | cut -c1-20)

          # Create user
          sudo useradd -m -s /bin/bash runner
          echo "runner:$PASSWORD" | sudo chpasswd

          # Add to sudo group
          sudo usermod -aG sudo runner

          # Save credentials to environment
          echo "SSH_PASSWORD=$PASSWORD" >> $GITHUB_ENV

          # Verify user creation
          if ! id "runner" &>/dev/null; then
              echo "User creation failed"
              exit 1
          fi

          echo "User 'runner' created successfully"

      - name: Install Tailscale
        run: |
          curl -fsSL https://tailscale.com/install.sh | sh

      - name: Establish Tailscale Connection
        run: |
          sudo tailscale up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-runner-ssh-${{ github.run_id }}

          # Wait for Tailscale to assign an IP
          for i in {1..10}; do
              TAILSCALE_IP=$(tailscale ip -4)
              if [ -n "$TAILSCALE_IP" ]; then
                  echo "TAILSCALE_IP=$TAILSCALE_IP" >> $GITHUB_ENV
                  echo "Tailscale IP assigned: $TAILSCALE_IP"
                  break
              fi
              sleep 5
          done

          if [ -z "$TAILSCALE_IP" ]; then
              echo "Tailscale IP not assigned. Exiting."
              exit 1
          fi

      - name: Verify SSH Accessibility
        run: |
          echo "Tailscale IP: $TAILSCALE_IP"

          # Check if SSH is running
          if ! sudo systemctl is-active --quiet ssh; then
              echo "SSH service is not running"
              sudo systemctl status ssh
              exit 1
          fi

          # Check if port 22 is listening
          if ! sudo netstat -tuln | grep ':22'; then
              echo "Port 22 is not listening"
              exit 1
          fi

          echo "SSH service is running and listening on port 22"

      - name: Maintain Connection
        run: |
          echo ""
          echo "=== SSH ACCESS ==="
          echo "Command: ssh runner@$TAILSCALE_IP"
          echo "Password: $SSH_PASSWORD"
          echo ""
          echo "Or one-liner:"
          echo "sshpass -p '$SSH_PASSWORD' ssh runner@$TAILSCALE_IP"
          echo "=================="
          echo ""

          # Keep runner active indefinitely (or until manually cancelled)
          while true; do
              echo "[$(date)] SSH Active - Use workflow cancel button to terminate"
              sleep 300
          done
